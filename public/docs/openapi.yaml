openapi: 3.0.3
info:
  title: 'Laravel 11 API Document'
  description: 'Auth and Task API'
  version: 1.0.0
servers:
  -
    url: 'https://f372-202-29-11-63.ngrok-free.app/laravel-crud-api/public'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route laravel-crud-api/public//api/user could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route laravel-crud-api/public//api/user could not be found.'
      tags:
        - Endpoints
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ksqkbxpbnwbzefdrkiob
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: veda31@example.org
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '3v`f`pZ_#'
              required:
                - name
                - email
                - password
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: timmy.lynch@example.org
                password:
                  type: string
                  description: ''
                  example: qui
              required:
                - email
                - password
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/tasks:
    get:
      summary: ''
      operationId: getApiTasks
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route laravel-crud-api/public//api/tasks could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route laravel-crud-api/public//api/tasks could not be found.'
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiTasks
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: byovtwdnkfunwqrkwefd
                description:
                  type: string
                  description: ''
                  example: 'Consequuntur dolorem sit labore libero et.'
                status:
                  type: string
                  description: ''
                  example: pending
                  enum:
                    - pending
                    - in_progress
                    - completed
                due_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-10-11T12:34:07'
                priority:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 5.'
                  example: 4
              required:
                - title
                - status
                - priority
  '/api/tasks/{id}':
    get:
      summary: ''
      operationId: getApiTasksId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route laravel-crud-api/public//api/tasks/1 could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route laravel-crud-api/public//api/tasks/1 could not be found.'
      tags:
        - Endpoints
    put:
      summary: ''
      operationId: putApiTasksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fp
                description:
                  type: string
                  description: ''
                  example: 'Explicabo quas itaque cupiditate maiores ratione.'
                status:
                  type: string
                  description: ''
                  example: completed
                  enum:
                    - pending
                    - in_progress
                    - completed
                due_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-10-11T12:34:07'
                priority:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 5.'
                  example: 3
              required:
                - title
                - status
                - priority
    delete:
      summary: ''
      operationId: deleteApiTasksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
